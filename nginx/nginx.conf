events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type text/html;
    sendfile on;
    keepalive_timeout 65;
    upstream zp_server1 {
        server 10.0.24.12:3333;
    }

    server {
        #SSL 访问端口号为 443
        listen 443 ssl http2;
        #填写绑定证书的域名
        server_name mwjz.live;
        #证书文件名称
        ssl_certificate /etc/nginx/conf.d/ssl/1_mwjz.live_bundle.crt;
        #私钥文件名称
        ssl_certificate_key /etc/nginx/conf.d/ssl/2_mwjz.live.key;

        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        # 开启压缩
        gzip on;
        # 压缩版本
        gzip_http_version 1.1;
        # 文件压缩类型
        gzip_types text/plain text/css application/javascript application/json application/xml;
        # 设置允许压缩的页面最小字节数
        gzip_min_length 10k;
        #设置压缩比率
        gzip_comp_level 5;
        #  设置压缩缓冲区大小，此处设置为4个16K内存作为压缩结果流缓存
        gzip_buffers 4 16k;
        charset utf-8;
        #请按照以下协议配置
        location / {
            proxy_pass http://zp_server1;
        }
    }

    server {
        #SSL 访问端口号为 443
        listen 443 ssl http2;
        #填写绑定证书的域名
        server_name gitea.mwjz.live;
        #证书文件名称
        ssl_certificate /etc/nginx/conf.d/ssl/1_mwjz.live_bundle.crt;
        #私钥文件名称
        ssl_certificate_key /etc/nginx/conf.d/ssl/2_mwjz.live.key;

        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        # 开启压缩
        gzip on;
        # 压缩版本
        gzip_http_version 1.1;
        # 文件压缩类型
        gzip_types text/plain text/css application/javascript application/json application/xml;
        # 设置允许压缩的页面最小字节数
        gzip_min_length 10k;
        #设置压缩比率
        gzip_comp_level 5;
        #  设置压缩缓冲区大小，此处设置为4个16K内存作为压缩结果流缓存
        gzip_buffers 4 16k;
        charset utf-8;
        #请按照以下协议配置
        location / {
            proxy_pass http://10.0.24.12:8929;
        }
    }

    server {
        #SSL 访问端口号为 443
        listen 443 ssl http2;
        #填写绑定证书的域名
        server_name portainer.mwjz.live;
        #证书文件名称
        ssl_certificate /etc/nginx/conf.d/ssl/1_mwjz.live_bundle.crt;
        #私钥文件名称
        ssl_certificate_key /etc/nginx/conf.d/ssl/2_mwjz.live.key;

        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        # 开启压缩
        gzip on;
        # 压缩版本
        gzip_http_version 1.1;
        # 文件压缩类型
        gzip_types text/plain text/css application/javascript application/json application/xml;
        # 设置允许压缩的页面最小字节数
        gzip_min_length 10k;
        #设置压缩比率
        gzip_comp_level 5;
        #  设置压缩缓冲区大小，此处设置为4个16K内存作为压缩结果流缓存
        gzip_buffers 4 16k;
        charset utf-8;
        #请按照以下协议配置
        location / {
            proxy_pass http://10.0.24.12:9000;
        }


    }

    server {
        #SSL 访问端口号为 443
        listen 443 ssl http2;
        #填写绑定证书的域名
        server_name drone.mwjz.live;
        #证书文件名称
        ssl_certificate /etc/nginx/conf.d/ssl/1_mwjz.live_bundle.crt;
        #私钥文件名称
        ssl_certificate_key /etc/nginx/conf.d/ssl/2_mwjz.live.key;

        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        # 开启压缩
        gzip on;
        # 压缩版本
        gzip_http_version 1.1;
        # 文件压缩类型
        gzip_types text/plain text/css application/javascript application/json application/xml;
        # 设置允许压缩的页面最小字节数
        gzip_min_length 10k;
        #设置压缩比率
        gzip_comp_level 5;
        #  设置压缩缓冲区大小，此处设置为4个16K内存作为压缩结果流缓存
        gzip_buffers 4 16k;
        charset utf-8;
        #请按照以下协议配置
        location / {
            proxy_pass http://10.0.24.12:7929;
        }


    }

    server {
        listen 80;
        # 引入定义变量指令的文件
        server_name mwjz.live;
        return 307 https://$host$request_uri;
    }

}
